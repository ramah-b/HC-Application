--------------------------------------------------------
--  File created - Thursday-November-19-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table HC_CLASSES
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_CLASSES" 
   (	"CRN" VARCHAR2(50 BYTE), 
	"COURSE_NUMBER" VARCHAR2(50 BYTE), 
	"PERSON_ID" VARCHAR2(50 BYTE), 
	"CLASSROOM_NUMBER" VARCHAR2(50 BYTE), 
	"YEAR" VARCHAR2(50 BYTE), 
	"SEMESTER" VARCHAR2(50 BYTE), 
	"DAY" VARCHAR2(30 BYTE), 
	"TIME" VARCHAR2(50 BYTE), 
	"EXISTS_FLAG" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HC_CLASSROOMS
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_CLASSROOMS" 
   (	"CLASSROOM_NUMBER" VARCHAR2(50 BYTE), 
	"BUILDING_NAME" VARCHAR2(50 BYTE), 
	"MAX_CAPACITY" NUMBER(*,0), 
	"EXISTS_FLAG" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HC_COURSES
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_COURSES" 
   (	"COURSE_NUMBER" VARCHAR2(50 BYTE), 
	"SUBJECTCODE" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(100 BYTE), 
	"CREDITS" NUMBER(8,2), 
	"DEPARTMENT_ID" VARCHAR2(50 BYTE), 
	"EXISTS_FLAG" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HC_DEPARTMENTS
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_DEPARTMENTS" 
   (	"DEPARTMENT_ID" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"EXISTS_FLAG" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HC_EMPLOYEES
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_EMPLOYEES" 
   (	"PERSON_ID" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"DEPARTMENT_ID" VARCHAR2(50 BYTE), 
	"OFFICE_NUMBER" VARCHAR2(50 BYTE), 
	"EMPLOYEE_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HC_GRADES
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_GRADES" 
   (	"CRN" VARCHAR2(50 BYTE), 
	"PERSON_ID" VARCHAR2(50 BYTE), 
	"GRADE" VARCHAR2(50 BYTE), 
	"GRADE_ID" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HC_MAJORS
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_MAJORS" 
   (	"MAJOR_ID" VARCHAR2(50 BYTE), 
	"DEPARTMENT_ID" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"EXISTS_FLAG" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HC_PERSONS
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_PERSONS" 
   (	"PERSON_ID" VARCHAR2(50 BYTE), 
	"ROLE_ID" VARCHAR2(50 BYTE), 
	"USERNAME" VARCHAR2(50 BYTE), 
	"PASSWORD" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HC_ROLES
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_ROLES" 
   (	"ROLE_ID" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HC_STUDENTS
--------------------------------------------------------

  CREATE TABLE "TESTUSERDB"."HC_STUDENTS" 
   (	"PERSON_ID" VARCHAR2(50 BYTE), 
	"NAME" VARCHAR2(50 BYTE), 
	"MAJOR" VARCHAR2(50 BYTE), 
	"YEAR_OF_ENTRY" VARCHAR2(100 BYTE), 
	"STUDENT_ID" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into TESTUSERDB.HC_CLASSES
SET DEFINE OFF;
Insert into TESTUSERDB.HC_CLASSES (CRN,COURSE_NUMBER,PERSON_ID,CLASSROOM_NUMBER,YEAR,SEMESTER,DAY,TIME,EXISTS_FLAG) values ('10030','6201','4','201','2014','Fall','MW','8AM','1');
Insert into TESTUSERDB.HC_CLASSES (CRN,COURSE_NUMBER,PERSON_ID,CLASSROOM_NUMBER,YEAR,SEMESTER,DAY,TIME,EXISTS_FLAG) values ('10070','6201','4','201','2015','Fall','MW','8AM','1');
Insert into TESTUSERDB.HC_CLASSES (CRN,COURSE_NUMBER,PERSON_ID,CLASSROOM_NUMBER,YEAR,SEMESTER,DAY,TIME,EXISTS_FLAG) values ('10072','6201','4','201','2015','Fall','TF','8AM','1');
REM INSERTING into TESTUSERDB.HC_CLASSROOMS
SET DEFINE OFF;
Insert into TESTUSERDB.HC_CLASSROOMS (CLASSROOM_NUMBER,BUILDING_NAME,MAX_CAPACITY,EXISTS_FLAG) values ('22','MC',30,'1');
Insert into TESTUSERDB.HC_CLASSROOMS (CLASSROOM_NUMBER,BUILDING_NAME,MAX_CAPACITY,EXISTS_FLAG) values ('201','MC',25,'0');
REM INSERTING into TESTUSERDB.HC_COURSES
SET DEFINE OFF;
Insert into TESTUSERDB.HC_COURSES (COURSE_NUMBER,SUBJECTCODE,NAME,DESCRIPTION,CREDITS,DEPARTMENT_ID,EXISTS_FLAG) values ('6201','ISTM','Intor to IT','Intorduction to Information Technology',3,'2','1');
REM INSERTING into TESTUSERDB.HC_DEPARTMENTS
SET DEFINE OFF;
Insert into TESTUSERDB.HC_DEPARTMENTS (DEPARTMENT_ID,NAME,EXISTS_FLAG) values ('1','business','1');
Insert into TESTUSERDB.HC_DEPARTMENTS (DEPARTMENT_ID,NAME,EXISTS_FLAG) values ('2','Computer Science','1');
Insert into TESTUSERDB.HC_DEPARTMENTS (DEPARTMENT_ID,NAME,EXISTS_FLAG) values ('3','Latin','1');
Insert into TESTUSERDB.HC_DEPARTMENTS (DEPARTMENT_ID,NAME,EXISTS_FLAG) values ('4','Administrator','1');
REM INSERTING into TESTUSERDB.HC_EMPLOYEES
SET DEFINE OFF;
Insert into TESTUSERDB.HC_EMPLOYEES (PERSON_ID,NAME,DEPARTMENT_ID,OFFICE_NUMBER,EMPLOYEE_ID) values ('6','Jo','1','500','21');
Insert into TESTUSERDB.HC_EMPLOYEES (PERSON_ID,NAME,DEPARTMENT_ID,OFFICE_NUMBER,EMPLOYEE_ID) values ('3','Ramah','3','420','22');
Insert into TESTUSERDB.HC_EMPLOYEES (PERSON_ID,NAME,DEPARTMENT_ID,OFFICE_NUMBER,EMPLOYEE_ID) values ('5','Sara','4','201','23');
REM INSERTING into TESTUSERDB.HC_GRADES
SET DEFINE OFF;
Insert into TESTUSERDB.HC_GRADES (CRN,PERSON_ID,GRADE,GRADE_ID) values ('10070','4',null,'1');
Insert into TESTUSERDB.HC_GRADES (CRN,PERSON_ID,GRADE,GRADE_ID) values ('10070','21',null,'2');
Insert into TESTUSERDB.HC_GRADES (CRN,PERSON_ID,GRADE,GRADE_ID) values ('10030','4','A','3');
Insert into TESTUSERDB.HC_GRADES (CRN,PERSON_ID,GRADE,GRADE_ID) values ('10030','21','B','4');
REM INSERTING into TESTUSERDB.HC_MAJORS
SET DEFINE OFF;
Insert into TESTUSERDB.HC_MAJORS (MAJOR_ID,DEPARTMENT_ID,NAME,EXISTS_FLAG) values ('1','1','Finance','0');
Insert into TESTUSERDB.HC_MAJORS (MAJOR_ID,DEPARTMENT_ID,NAME,EXISTS_FLAG) values ('2','1','Accounting','1');
Insert into TESTUSERDB.HC_MAJORS (MAJOR_ID,DEPARTMENT_ID,NAME,EXISTS_FLAG) values ('3','2','Informatics','1');
Insert into TESTUSERDB.HC_MAJORS (MAJOR_ID,DEPARTMENT_ID,NAME,EXISTS_FLAG) values ('4','2','Cyber Security','1');
Insert into TESTUSERDB.HC_MAJORS (MAJOR_ID,DEPARTMENT_ID,NAME,EXISTS_FLAG) values ('5','3','Modern History','0');
REM INSERTING into TESTUSERDB.HC_PERSONS
SET DEFINE OFF;
Insert into TESTUSERDB.HC_PERSONS (PERSON_ID,ROLE_ID,USERNAME,PASSWORD,EMAIL) values ('4','4','sam','sam','s@g.c');
Insert into TESTUSERDB.HC_PERSONS (PERSON_ID,ROLE_ID,USERNAME,PASSWORD,EMAIL) values ('5','1','sara','sara','sara@gmail.com');
Insert into TESTUSERDB.HC_PERSONS (PERSON_ID,ROLE_ID,USERNAME,PASSWORD,EMAIL) values ('6','1','jo','jo','jo@g.com');
Insert into TESTUSERDB.HC_PERSONS (PERSON_ID,ROLE_ID,USERNAME,PASSWORD,EMAIL) values ('21','4','bob','bob','bob@bobby.com');
Insert into TESTUSERDB.HC_PERSONS (PERSON_ID,ROLE_ID,USERNAME,PASSWORD,EMAIL) values ('7','3','tom','tom','tom@tommy.com');
Insert into TESTUSERDB.HC_PERSONS (PERSON_ID,ROLE_ID,USERNAME,PASSWORD,EMAIL) values ('3','4','ramah','ramah','R@gt.com');
REM INSERTING into TESTUSERDB.HC_ROLES
SET DEFINE OFF;
Insert into TESTUSERDB.HC_ROLES (ROLE_ID,DESCRIPTION) values ('1','Administrators');
Insert into TESTUSERDB.HC_ROLES (ROLE_ID,DESCRIPTION) values ('2','Advisors');
Insert into TESTUSERDB.HC_ROLES (ROLE_ID,DESCRIPTION) values ('3','Instructors');
Insert into TESTUSERDB.HC_ROLES (ROLE_ID,DESCRIPTION) values ('4','Students');
REM INSERTING into TESTUSERDB.HC_STUDENTS
SET DEFINE OFF;
Insert into TESTUSERDB.HC_STUDENTS (PERSON_ID,NAME,MAJOR,YEAR_OF_ENTRY,STUDENT_ID) values ('21','bob','Finance','2012','21');
Insert into TESTUSERDB.HC_STUDENTS (PERSON_ID,NAME,MAJOR,YEAR_OF_ENTRY,STUDENT_ID) values ('7','Tom',null,null,'41');
Insert into TESTUSERDB.HC_STUDENTS (PERSON_ID,NAME,MAJOR,YEAR_OF_ENTRY,STUDENT_ID) values ('4','Sam','Accounting','2014','24');
--------------------------------------------------------
--  DDL for Index CLASSES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."CLASSES_PK" ON "TESTUSERDB"."HC_CLASSES" ("CRN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CLASSROOMS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."CLASSROOMS_PK" ON "TESTUSERDB"."HC_CLASSROOMS" ("CLASSROOM_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COURSES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."COURSES_PK" ON "TESTUSERDB"."HC_COURSES" ("COURSE_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEPARTMENTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."DEPARTMENTS_PK" ON "TESTUSERDB"."HC_DEPARTMENTS" ("DEPARTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EMPLOYEES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."EMPLOYEES_PK" ON "TESTUSERDB"."HC_EMPLOYEES" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index HC_EMPLOYEES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."HC_EMPLOYEES_PK" ON "TESTUSERDB"."HC_EMPLOYEES" ("EMPLOYEE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index HC_GRADES_PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."HC_GRADES_PK1" ON "TESTUSERDB"."HC_GRADES" ("GRADE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MAJORS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."MAJORS_PK" ON "TESTUSERDB"."HC_MAJORS" ("MAJOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PERSONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."PERSONS_PK" ON "TESTUSERDB"."HC_PERSONS" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ROLES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."ROLES_PK" ON "TESTUSERDB"."HC_ROLES" ("ROLE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STUDENTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."STUDENTS_PK" ON "TESTUSERDB"."HC_STUDENTS" ("PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index HC_STUDENTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TESTUSERDB"."HC_STUDENTS_PK" ON "TESTUSERDB"."HC_STUDENTS" ("STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table HC_CLASSES
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_CLASSES" MODIFY ("CRN" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_CLASSES" ADD CONSTRAINT "CLASSES_PK" PRIMARY KEY ("CRN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_CLASSES" ADD CHECK (exists_flag in(0,1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table HC_CLASSROOMS
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_CLASSROOMS" MODIFY ("CLASSROOM_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_CLASSROOMS" ADD CONSTRAINT "CLASSROOMS_PK" PRIMARY KEY ("CLASSROOM_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_CLASSROOMS" ADD CHECK (exists_flag in(0,1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table HC_COURSES
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_COURSES" MODIFY ("COURSE_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_COURSES" ADD CONSTRAINT "COURSES_PK" PRIMARY KEY ("COURSE_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_COURSES" ADD CHECK (exists_flag in(0,1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table HC_DEPARTMENTS
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_DEPARTMENTS" MODIFY ("DEPARTMENT_ID" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_DEPARTMENTS" ADD CONSTRAINT "DEPARTMENTS_PK" PRIMARY KEY ("DEPARTMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_DEPARTMENTS" ADD CHECK (exists_flag in(0,1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table HC_EMPLOYEES
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_EMPLOYEES" ADD CONSTRAINT "HC_EMPLOYEES_PK" PRIMARY KEY ("EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_EMPLOYEES" MODIFY ("PERSON_ID" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_EMPLOYEES" MODIFY ("EMPLOYEE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HC_GRADES
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_GRADES" MODIFY ("CRN" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_GRADES" MODIFY ("GRADE_ID" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_GRADES" ADD CONSTRAINT "HC_GRADES_PK" PRIMARY KEY ("GRADE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HC_MAJORS
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_MAJORS" MODIFY ("MAJOR_ID" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_MAJORS" ADD CONSTRAINT "MAJORS_PK" PRIMARY KEY ("MAJOR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_MAJORS" ADD CHECK (exists_flag in(0,1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table HC_PERSONS
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_PERSONS" MODIFY ("PERSON_ID" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_PERSONS" ADD CONSTRAINT "PERSONS_PK" PRIMARY KEY ("PERSON_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HC_ROLES
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_ROLES" MODIFY ("ROLE_ID" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_ROLES" ADD CONSTRAINT "ROLES_PK" PRIMARY KEY ("ROLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HC_STUDENTS
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_STUDENTS" ADD CONSTRAINT "HC_STUDENTS_PK" PRIMARY KEY ("STUDENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_STUDENTS" MODIFY ("PERSON_ID" NOT NULL ENABLE);
  ALTER TABLE "TESTUSERDB"."HC_STUDENTS" MODIFY ("STUDENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table HC_CLASSES
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_CLASSES" ADD CONSTRAINT "CLASSES_FK1" FOREIGN KEY ("COURSE_NUMBER")
	  REFERENCES "TESTUSERDB"."HC_COURSES" ("COURSE_NUMBER") ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_CLASSES" ADD CONSTRAINT "CLASSES_FK2" FOREIGN KEY ("PERSON_ID")
	  REFERENCES "TESTUSERDB"."HC_PERSONS" ("PERSON_ID") ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_CLASSES" ADD CONSTRAINT "CLASSES_FK3" FOREIGN KEY ("CLASSROOM_NUMBER")
	  REFERENCES "TESTUSERDB"."HC_CLASSROOMS" ("CLASSROOM_NUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HC_COURSES
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_COURSES" ADD CONSTRAINT "COURSES_FK1" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES "TESTUSERDB"."HC_DEPARTMENTS" ("DEPARTMENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HC_EMPLOYEES
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_EMPLOYEES" ADD CONSTRAINT "EMPLOYEES_FK1" FOREIGN KEY ("PERSON_ID")
	  REFERENCES "TESTUSERDB"."HC_PERSONS" ("PERSON_ID") ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_EMPLOYEES" ADD CONSTRAINT "EMPLOYEES_FK2" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES "TESTUSERDB"."HC_DEPARTMENTS" ("DEPARTMENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HC_GRADES
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_GRADES" ADD CONSTRAINT "HC_GRADES_FK1" FOREIGN KEY ("PERSON_ID")
	  REFERENCES "TESTUSERDB"."HC_PERSONS" ("PERSON_ID") ENABLE;
  ALTER TABLE "TESTUSERDB"."HC_GRADES" ADD CONSTRAINT "HC_GRADES_FK2" FOREIGN KEY ("CRN")
	  REFERENCES "TESTUSERDB"."HC_CLASSES" ("CRN") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HC_MAJORS
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_MAJORS" ADD CONSTRAINT "MAJORS_FK1" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES "TESTUSERDB"."HC_DEPARTMENTS" ("DEPARTMENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HC_PERSONS
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_PERSONS" ADD CONSTRAINT "PERSONS_FK1" FOREIGN KEY ("ROLE_ID")
	  REFERENCES "TESTUSERDB"."HC_ROLES" ("ROLE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HC_STUDENTS
--------------------------------------------------------

  ALTER TABLE "TESTUSERDB"."HC_STUDENTS" ADD CONSTRAINT "STUDENTS_FK1" FOREIGN KEY ("PERSON_ID")
	  REFERENCES "TESTUSERDB"."HC_PERSONS" ("PERSON_ID") ENABLE;
--------------------------------------------------------
--  DDL for Trigger COURSES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."COURSES_TRG" 
BEFORE INSERT ON HC_COURSES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."COURSES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEPARTMENTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."DEPARTMENTS_TRG" 
BEFORE INSERT ON HC_DEPARTMENTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."DEPARTMENTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEPARTMENTS_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."DEPARTMENTS_TRG1" 
BEFORE INSERT ON HC_DEPARTMENTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.DEPARTMENT_ID IS NULL THEN
      SELECT DEPARTMENTS_SEQ.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."DEPARTMENTS_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMPLOYEES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."EMPLOYEES_TRG" 
BEFORE INSERT ON HC_EMPLOYEES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."EMPLOYEES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HC_EMPLOYEES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."HC_EMPLOYEES_TRG" 
BEFORE INSERT ON HC_EMPLOYEES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.EMPLOYEE_ID IS NULL THEN
      SELECT HC_EMPLOYEES_SEQ.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."HC_EMPLOYEES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HC_EMPLOYEES_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."HC_EMPLOYEES_TRG1" 
BEFORE INSERT ON HC_EMPLOYEES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PERSON_ID IS NULL THEN
      SELECT HC_EMPLOYEES_SEQ1.NEXTVAL INTO :NEW.PERSON_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."HC_EMPLOYEES_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HC_GRADES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."HC_GRADES_TRG" 
BEFORE INSERT ON HC_GRADES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.CRN IS NULL THEN
      SELECT HC_GRADES_SEQ.NEXTVAL INTO :NEW.CRN FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."HC_GRADES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HC_GRADES_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."HC_GRADES_TRG1" 
BEFORE INSERT ON HC_GRADES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.GRADE_ID IS NULL THEN
      SELECT HC_GRADES_SEQ.NEXTVAL INTO :NEW.GRADE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."HC_GRADES_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MAJORS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."MAJORS_TRG" 
BEFORE INSERT ON HC_MAJORS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."MAJORS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MAJORS_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."MAJORS_TRG1" 
BEFORE INSERT ON HC_MAJORS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.MAJOR_ID IS NULL THEN
      SELECT MAJORS_SEQ.NEXTVAL INTO :NEW.MAJOR_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."MAJORS_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PERSONS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."PERSONS_TRG" 
BEFORE INSERT ON HC_PERSONS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."PERSONS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PERSONS_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."PERSONS_TRG1" 
BEFORE INSERT ON HC_PERSONS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PERSON_ID IS NULL THEN
      SELECT PERSONS_SEQ.NEXTVAL INTO :NEW.PERSON_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."PERSONS_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ROLES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."ROLES_TRG" 
BEFORE INSERT ON HC_ROLES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."ROLES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ROLES_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."ROLES_TRG1" 
BEFORE INSERT ON HC_ROLES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ROLE_ID IS NULL THEN
      SELECT ROLES_SEQ.NEXTVAL INTO :NEW.ROLE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."ROLES_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HC_STUDENTS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."HC_STUDENTS_TRG" 
BEFORE INSERT ON HC_STUDENTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.STUDENT_ID IS NULL THEN
      SELECT HC_STUDENTS_SEQ.NEXTVAL INTO :NEW.STUDENT_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."HC_STUDENTS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HC_STUDENTS_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TESTUSERDB"."HC_STUDENTS_TRG1" 
BEFORE INSERT ON HC_STUDENTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PERSON_ID IS NULL THEN
      SELECT HC_STUDENTS_SEQ1.NEXTVAL INTO :NEW.PERSON_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TESTUSERDB"."HC_STUDENTS_TRG1" ENABLE;
